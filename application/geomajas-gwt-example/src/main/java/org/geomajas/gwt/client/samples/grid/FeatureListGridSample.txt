public Canvas getViewPanel() {
	VLayout layout = new VLayout();
	layout.setWidth100();
	layout.setHeight100();
	layout.setMembersMargin(10);

	// switch off lazy loading, we want to get everything
	GwtCommandDispatcher.getInstance().setUseLazyLoading(false);

	VLayout mapLayout = new VLayout();
	mapLayout.setShowEdges(true);

	// Map with ID osmFeatureInfoMap is defined in the XML configuration.
	final MapWidget map = new MapWidget("africanCountriesMap", "gwt-samples");
	map.setController(new PanController(map));
	mapLayout.addMember(map);

	// Create a layout with a FeatureListGrid in it:
	final FeatureListGrid grid = new FeatureListGrid(map.getMapModel());
	grid.setShowEdges(true);

	// Add a trigger to fill the grid when the map has finished loading:
	map.getMapModel().addMapModelHandler(new MapModelHandler() {

		public void onMapModelChange(MapModelEvent event) {
			GWT.log("+++ map model changed", null);
			MapModel mapModel = map.getMapModel();
			VectorLayer layer = (VectorLayer) mapModel.getLayer("mflgCountriesLayer");
			grid.setLayer(layer);
			Bbox bounds = mapModel.getMapView().getBounds();
			layer.getFeatureStore().queryAndSync(bounds, null, null,
					new TileFunction<VectorTile>() {

						public void execute(VectorTile tile) {
							GWT.log("+++ get features", null);
							tile.getFeatures(GeomajasConstant.FEATURE_INCLUDE_ALL, new LazyLoadCallback() {

								public void execute(List<Feature> response) {
									GWT.log("+++ add features in grid", null);
									for (Feature feature : response) {
										grid.addFeature(feature);
									}
								}
							});
						}
					});
		}
	});

	layout.addMember(grid);
	layout.addMember(mapLayout);

	return layout;
}
