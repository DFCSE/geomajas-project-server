	public Canvas getViewPanel() {
		VLayout layout = new VLayout();
		layout.setWidth100();
		layout.setHeight100();
		layout.setMembersMargin(10);

		HLayout mapLayout = new HLayout();
		mapLayout.setShowEdges(true);

		// Map with ID osmMap is defined in the XML configuration. (mapOsm.xml)
		final MapWidget map = new MapWidget("osmMap", "gwt-samples");
		map.setController(new PanController(map));
		mapLayout.addMember(map);

		HLayout buttonLayout = new HLayout();
		buttonLayout.setMembersMargin(10);

		Button butSwitch = new Button(I18nProvider.getSampleMessages().switchUnitTypes());
		butSwitch.setWidth100();
		buttonLayout.addMember(butSwitch);

		butSwitch.addClickHandler(new ClickHandler() {

			public void onClick(ClickEvent event) {

				if (map.getMapModel().getMapInfo().getDisplayUnitType() == UnitType.METRIC) {
					SC.say("Current unit: " + map.getMapModel().getMapInfo().getDisplayUnitType()
							+ "<BR>Switching to ENGLISH");
					map.getMapModel().getMapInfo().setDisplayUnitType(UnitType.ENGLISH); // set English
				} else {
					SC.say("Current unit: " + map.getMapModel().getMapInfo().getDisplayUnitType()
							+ "<BR>Switching to METRIC");
					map.getMapModel().getMapInfo().setDisplayUnitType(UnitType.METRIC); // set English
				}
				map.setScalebarEnabled(false); // force an update of the scalebar...
				map.setScalebarEnabled(true); // force an update of the scalebar
			}
		});

		layout.addMember(mapLayout);
		layout.addMember(buttonLayout);

		return layout;
	}