<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This file is part of Geomajas, a component framework for building
  ~ rich Internet applications (RIA) with sophisticated capabilities for the
  ~ display, analysis and management of geographic information.
  ~ It is a building block that allows developers to add maps
  ~ and other geographic data capabilities to their web applications.
  ~
  ~ Copyright 2008-2010 Geosparc, http://www.geosparc.com, Belgium
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="chapter-configuration">
  <title>Configuration</title>

  <para></para>

  <section id="dependencies">
    <title>Dependencies</title>

    <para>Make sure your include the plug-in in your project. If you are using
    Maven, add the following dependency to your pom:</para>

    <example>
      <title>WMS layer dependency</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-wms&lt;/artifactId&gt;
    &lt;version&gt;1.7.1&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
    </example>
  </section>

  <section id="wmsconf">
    <title>WMS layer configuration</title>

    <para>A complete WMS layer configuration looks as follows:</para>

    <xi:include href="listing/WmsLayerSample.xml"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <para>As you can see, the bean class refers to the actual layer type:
    <code>org.geomajas.layer.wms.WmsLayer</code>.</para>

    <para>The first property is the layer info object, which describes the
    metadata common to all raster layers. Visit the <ulink
    url="http://files.geomajas.org/maven/trunk/geomajas/docbook-devuserguide/html/master.html#conf-raster">Geomajas
    developer guide</ulink> to learn more about it. This guide will focus on
    the WMS specific configuration options.</para>

    <para>The layer object contains some extra properties which are
    specifically tied to the WMS server. Some of these are required, some are
    optional.</para>

    <table>
      <title>WMS layer properties</title>

      <tgroup cols="2">
        <colspec colnum="1" colwidth="1*" />

        <colspec colnum="2" colwidth="2*" />

        <thead>
          <row>
            <entry>Name</entry>

            <entry>Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><emphasis role="bold">baseWmsUrl
            <emphasis>(required)</emphasis></emphasis></entry>

            <entry>The base url of the WMS server. This is the base part
            (excluding the request parameters) of the url that would be called
            to execute a WMS request.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">version<emphasis>
            (required)</emphasis></emphasis></entry>

            <entry>Version of the WMS protocol which should be used. Check
            your server configuration for possible values.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">format
            <emphasis>(required)</emphasis></emphasis></entry>

            <entry>The mime type in which the images should be returned, for
            example "image/gif". Check your server configuration for possible
            values.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">styles
            <emphasis>(required)</emphasis></emphasis></entry>

            <entry>Some WMS servers support multiple styles for their layers.
            Check your server configuration for possible values.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">parameters<emphasis>
            (optional)</emphasis></emphasis></entry>

            <entry>You can define additional parameters which can be passed to
            the WMS server for each GetMap request. These are name/value pairs
            which are passed in
            <code>org.geomajas.configuration.Parameter</code> objects.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">authentication</emphasis>
            (optional)</entry>

            <entry>Optional basic or digest HTTP authentication. This bean is
            of the type:
            <code>org.geomajas.layer.wms.HttpAuthentication</code></entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>The optional HTTP authentication allows the WMS layer to send user
    credentials to the WMS server in the HTTP headers. Although this is an
    option, often WMS server will be secured, and require such authentication.
    Below is an example of a WMS layer configuration that uses the HTTP
    authentication:</para>

    <programlisting>&lt;bean name="wmsOrtho" class="be.geomajas.layer.wms.WmsLayer" &gt;
    &lt;property name="layerInfo" ref="wmsOrthoInfo" /&gt;

    &lt;property name="baseWmsUrl" value="http://ogc.beta.agiv.be/ogc/wms/orthoklm" /&gt;
    &lt;property name="version" value="1.3.0" /&gt;
    &lt;property name="format" value="image/jpeg" /&gt;
    &lt;property name="styles" value="" /&gt;
        
    &lt;property name="authentication"&gt;
        &lt;bean class="be.geomajas.layer.wms.HttpAuthentication"&gt;
            &lt;property name="user" value="&lt;the user name&gt;" /&gt;
            &lt;property name="password" value="&lt;password&gt;" /&gt;
            &lt;property name="realm" value="&lt;optional realm&gt;" /&gt;
            &lt;property name="applicationUrl" value="&lt;the URL for this web application&gt;" /&gt;
        &lt;/bean&gt;
    &lt;/property&gt;
&lt;/bean&gt;</programlisting>

    <para>Let us go over the properties for the authentication bean:</para>

    <table>
      <title>WMS layer properties</title>

      <tgroup cols="2">
        <colspec colnum="1" colwidth="1*" />

        <colspec colnum="2" colwidth="2*" />

        <thead>
          <row>
            <entry>Name</entry>

            <entry>Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><emphasis role="bold">user
            <emphasis>(required)</emphasis></emphasis></entry>

            <entry>The user login name.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">password<emphasis>
            (required)</emphasis></emphasis></entry>

            <entry>The users password.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">realm
            <emphasis>(optional)</emphasis></emphasis></entry>

            <entry>The HTTP realm for this user. This is an optional
            value.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">applicationUrl
            <emphasis>(required)</emphasis></emphasis></entry>

            <entry>The URL to the web application itself. In order for the WMS
            layer to add authentication headers to each WMS request, it works
            with a proxy servlet. This means that the WMS layer must be
            capable of determining the URL to this servlet. Therefore it needs
            the base URL to the Geomajas web application. If you leave this
            empty, a relative URL will be used, which is not always guaranteed
            to work.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</chapter>
