<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!--
  ~ This file is part of Geomajas, a component framework for building
  ~ rich Internet applications (RIA) with sophisticated capabilities for the
  ~ display, analysis and management of geographic information.
  ~ It is a building block that allows developers to add maps
  ~ and other geographic data capabilities to their web applications.
  ~
  ~ Copyright 2008-2010 Geosparc, http://www.geosparc.com, Belgium
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<chapter id="chapter-howto">
  <title>How-to</title>

  <para>This chapter details the extension possibilities of the geocoder
  plug-in.</para>

  <section>
    <title>How to write a geocoder service</title>

    <para>Writing a geocoder service is reasonable easy. All you have to do is
    create an implementation of the GeocoderService interface (listing <xref
    linkend="GeocoderService" />). The getCrs() method is used by Geomajas to
    know the coordinate system which is used for the results of your service.
    This is used to convert to the coordinate system of the client.</para>

    <xi:include href="../listing/GeocoderService.xml"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <para>The getLocation() method does the actual work of converting the
    location strings (ordered from most general, biggest area, to more
    specific) to a location. The method is expected to return null or an empty
    list if no results where found for the location string, or one object if
    the strings were matched, or multiple results when the matching was
    ambiguous and resulted in several alternatives.</para>

    <para>The result itself contains the information from listing <xref
    linkend="GetLocationResult" />.</para>

    <xi:include href="../listing/GetLocationResult.xml"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <para>The fields include:</para>

    <para><itemizedlist>
        <listitem>
          <para><emphasis>canonicalStrings</emphasis>: </para>
        </listitem>

        <listitem>
          <para><emphasis>coordinate</emphasis>: </para>
        </listitem>

        <listitem>
          <para><emphasis>envelope</emphasis>: </para>
        </listitem>

        <listitem>
          <para><emphasis>userData</emphasis>: </para>
        </listitem>
      </itemizedlist></para>
  </section>

  <section>
    <title>How to write a service to split the input string</title>

    <para>...</para>

    <xi:include href="../listing/SplitGeocoderStringService.xml"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <para>...</para>
  </section>

  <section>
    <title>How to write a service to combine results</title>

    <para>...</para>

    <xi:include href="../listing/CombineResultService.xml"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <para>...</para>
  </section>
</chapter>
