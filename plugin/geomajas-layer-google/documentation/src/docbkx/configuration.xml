<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This file is part of Geomajas, a component framework for building
  ~ rich Internet applications (RIA) with sophisticated capabilities for the
  ~ display, analysis and management of geographic information.
  ~ It is a building block that allows developers to add maps
  ~ and other geographic data capabilities to their web applications.
  ~
  ~ Copyright 2008-2010 Geosparc, http://www.geosparc.com, Belgium
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="chapter-configuration">
  <title>Configuration</title>

  <para></para>

  <section>
    <title>Dependencies</title>

    <para>Make sure your include the plug-in in your project. If you are using
    Maven, add the following dependency to your pom:</para>

    <example>
      <title>Google layer dependency</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-google&lt;/artifactId&gt;
    &lt;version&gt;${geomajas-layer-google-version}&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
    </example>
  </section>

  <section>
    <title>Google Maps layer configuration</title>

    <para>A complete Google layer configuration looks as follows:</para>

    <xi:include href="../../en-GB/listing/GoogleLayerSample.xml"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <para><table>
        <title>GoogleLayer configuration</title>

        <tgroup cols="2">
          <colspec colnum="1" colwidth="1*" />

          <colspec colnum="2" colwidth="2*" />

          <thead>
            <row>
              <entry>GoogleLayer configuration</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>satellite</entry>

              <entry>Set to true to use satellite view from Google. When this
              and physical are false (the default), the normal view (showing
              streets) will be used. Setting to true will reset physical to
              false.</entry>
            </row>

            <row>
              <entry>physical</entry>

              <entry>Set to true to use physical view from Google. When this
              and satellite are false, the normal view (showing streets) will
              be used. Setting to true will reset satellite to false.</entry>
            </row>

            <row>
              <entry>maxZoomLevel</entry>

              <entry>Set to a number for which maps are available in the
              region of interest, defaults to 19. The first zoom level has one
              tile for the entire world, the second has four tiles
              etc.</entry>
            </row>
          </tbody>
        </tgroup>
      </table></para>

    <para>The layer info inner bean has the same general content as usual.
    There are some simplifications though. There is no need to provide
    resolutions or tile size (256x256 is always used). The crs should always
    be set to Mercator ("EPSG:900913").</para>

    <para>On the layer, you can set the "satellite" or "physical" property to
    choose between using normal display (showing streets), satellite view (by
    setting this to "true"), or physical view (the modes are exclusive, last
    set will be valid). You can also set the maximum tile level on the layer,
    this defaults to 19 which is supported by Google in most places.</para>

    <para>You can also set the display type using the dataSourceName parameter
    of layerInfo, for example for physical use
    G_PHYSICAL_MAP@GoogleLayer.</para>

    <note>
      <para>You need to assure that you comply with Google's terms of use (see
      <ulink
      url="http://code.google.com/apis/maps/">http://code.google.com/apis/maps/</ulink>).
      Some of the things you need to do include adding the Google API code in
      your application (using a Google API key when not running on localhost),
      and (from the GWT face, using the <code>GoogleAddon</code> class to
      assure the copyright notes are displayed on the map.</para>
    </note>
  </section>
</chapter>
