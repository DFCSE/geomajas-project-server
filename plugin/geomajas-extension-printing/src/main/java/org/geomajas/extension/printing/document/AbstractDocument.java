/*
 * This file is part of Geomajas, a component framework for building
 * rich Internet applications (RIA) with sophisticated capabilities for the
 * display, analysis and management of geographic information.
 * It is a building block that allows developers to add maps
 * and other geographic data capabilities to their web applications.
 *
 * Copyright 2008-2010 Geosparc, http://www.geosparc.com, Belgium
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.geomajas.extension.printing.document;

import org.geomajas.extension.printing.command.dto.PrintGetTemplateRequest;

import java.io.ByteArrayOutputStream;
import java.text.DateFormat;
import java.util.Date;

/**
 * <p>
 * Wrapper for a pdf document generated by iText, the wrapper contains
 * the document in memory as a ByteArrayOutputStream and attributes how
 * the file is downloaded.
 * </p>
 *
 * @author Oliver May
 */
public abstract class AbstractDocument {

	protected ByteArrayOutputStream documentStream = new ByteArrayOutputStream();

	protected int downloadMethod = PrintGetTemplateRequest.DOWNLOAD_METHOD_BROWSER;

	protected String fileName;

	public abstract void render();

	/**
	 * Set the way the file is downloaded, in the browser or save as.
	 *
	 * @param downloadMethod BROWSER or SAVE statics.
	 */
	public void setDownloadMethod(int downloadMethod) {
		this.downloadMethod = downloadMethod;
	}

	/**
	 * @return how the file is downloaded, BROWSER or SAVE.
	 */
	public int getDownloadMethod() {
		return downloadMethod;
	}

	/**
	 * @return the filename we want to give this document, this is generated
	 *         using the current date/time if no explicit filename is set.
	 */
	public String getFilename() {
		if (fileName != null) {
			return fileName;
		} else {
			return "geomajas_" + DateFormat.getInstance().format(new Date()) + ".pdf";
		}
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	/**
	 * @return the memory stream of the document.
	 */
	public ByteArrayOutputStream getOutputStream() {
		return documentStream;
	}

	public int hashCode() {
		return documentStream.hashCode();
	}
}
